var searchIndex = new Map(JSON.parse('[\
["variant_myth",{"t":"CCCCCCCCCHHFFPGPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNPGPPPPPPIPPNNNNNNNNNNNNNNNFFIFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNFFGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNFNNNNNNNHNNNFNNNNNNNNNNFFONNNNNNNNNNNNNNNNOOONNNNNNNN","n":["annotation","annotations_db","cli","error","interval_tree","myth","sequences_db","translate","variant","variants2myth","vcf2json","Annotation","Attribute","Forward","Frame","One","Reverse","Strand","Two","Unknow","Zero","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_byte_record","from_u8_slice","get_attribute","get_exon_number","get_feature","get_interval","get_seqname","get_source","get_strand","get_transcript_id","get_transcript_id","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AnnotationsDataBase","borrow","borrow_mut","from","from_reader","get_annotation","into","try_from","try_into","type_id","Command","annotations","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","output","quiet","reference","timestamp","translate","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","variant","verbosity","Err","Error","FloatParsing","GffBadFrame","GffBadStrand","IntParsing","Log","Ok","Result","StdIO","VcfBadRecord","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id","Entry","InternalEntry","Interval","IntervalTree","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","default","end","eq","eq","eq","find","find_into","fmt","fmt","fmt","from","from","from","from_iter","hash","hash","hash","index","insert","interval","into","into","into","new","start","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AnnotationMyth","AnnotationMythBuilder","AnnotationMythBuilderError","Myth","UninitializedField","ValidationError","add_annotation","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","default","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_variant","into","into","into","into","serialize","serialize","source","source","to_owned","to_string","transcript_id","transcript_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SequencesDataBase","borrow","borrow_mut","from","from_reader","get_interval","get_transcript","into","rev_comp","try_from","try_into","type_id","Translate","borrow","borrow_mut","from","from_reader","into","table","translate","try_from","try_into","type_id","Variant","VcfReader","alt_seq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from_byte_record","from_reader","get_interval","into","into","into_iter","next","position","ref_seq","seqname","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"variant_myth"],[11,"variant_myth::annotation"],[85,"variant_myth::annotations_db"],[95,"variant_myth::cli"],[121,"variant_myth::error"],[147,"variant_myth::interval_tree"],[201,"variant_myth::myth"],[256,"variant_myth::sequences_db"],[268,"variant_myth::translate"],[279,"variant_myth::variant"],[309,"std::io"],[310,"core::fmt"],[311,"core::result"],[312,"csv::byte_record"],[313,"core::ops::range"],[314,"alloc::string"],[315,"core::any"],[316,"alloc::boxed"],[317,"std::io::buffered::bufreader"],[318,"alloc::vec"],[319,"clap_builder::builder::command"],[320,"clap_builder::parser::matches::arg_matches"],[321,"clap_builder"],[322,"clap_builder::util::id"],[323,"core::option"],[324,"std::io::buffered::bufwriter"],[325,"stderrlog"],[326,"core::num::error"],[327,"core::num::dec2flt"],[328,"std::io::error"],[329,"log"],[330,"core::error"],[331,"core::clone"],[332,"core::cmp"],[333,"core::marker"],[334,"core::convert"],[335,"core::iter::traits::collect"],[336,"core::hash"],[337,"derive_builder::error"],[338,"serde::ser"],[339,"ahash::hash_map"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,12,11,0,12,12,12,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,13,11,11,12,12,13,13,14,14,11,12,13,14,14,13,14,13,14,14,14,14,14,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,0,1,1,1,1,1,1,1,1,1,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,8,0,41,41,41,41,41,8,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,47,51,52,47,51,52,47,51,52,47,51,52,51,52,29,47,51,52,52,52,47,51,52,47,51,52,52,47,51,52,52,52,51,47,51,52,52,29,47,51,52,47,51,52,47,51,52,47,51,52,0,0,0,0,63,63,5,62,63,61,5,62,63,61,5,62,61,61,61,62,63,63,61,5,62,63,63,63,61,5,5,62,63,61,5,61,5,62,61,61,63,62,61,62,63,61,5,62,63,61,5,62,63,61,5,0,2,2,2,2,2,2,2,0,2,2,2,0,3,3,3,3,3,3,3,3,3,3,0,0,4,6,4,6,4,4,4,4,6,4,4,6,4,6,4,6,6,4,4,4,4,4,6,4,6,4,6,4],"f":"`````````{{bdfh}j}{{bdf{l{c}}e}{{A`{n}}}AbAd}``````````{ce{}{}}0000000{AfAf}{AhAh}{AjAj}{AlAl}{{ce}n{}{}}000{{}Aj}{{AfAn}{{Bb{nB`}}}}{{AfAn}Bd}{{AhAn}{{Bb{nB`}}}}{{AhAn}Bd}{{AjAn}Bd}{{AjAn}{{Bb{nB`}}}}{{AlAn}{{Bb{nB`}}}}{{AlAn}Bd}{cc{}}000{Bf{{A`{Al}}}}{{{Bj{Bh}}}{{A`{Aj}}}}{AlAj}{AjBl}{Al{{Bj{Bh}}}}{Al{{Bn{Bl}}}}11{AlAf}{Aj{{Bj{Bh}}}}3{ce{}{}}0000000{cC`{}}000{c{{Bb{e}}}{}{}}0000000{cCb{}}000`33<{{{Ch{{Cf{Cd}}}}}{{A`{b}}}}{{b{Bj{Bh}}{Cj{Bl}}}{{Cl{Al}}}}5332`{Cn{{A`{{Ch{{Cf{Cd}}}}}}}}{D`D`}077{{}D`}0{{CnAn}Bd}{cc{}}{Db{{Bb{CnDd}}}}0{{}{{Dh{Df}}}}<{Cn{{A`{{Dj{{Cf{Ad}}}}}}}}{CnDl}8{CnDn}9==<{{CnDb}{{Bb{nDd}}}}0:{CnE`}```````````{ce{}{}}0{{EbAn}Bd}09{EdEb}{EfEb}{EhEb}{EjEb}5{Eb{{Dh{El}}}}{cC`{}}{c{{Bb{e}}}{}{}}0{cCb{}}````999999{{{En{ce}}}{{En{ce}}}{F`FbF`Fd}F`}{{{Ff{ce}}}{{Ff{ce}}}{F`FbF`}F`}{{{Fh{ce}}}{{Fh{ce}}}{F`FbF`Fd}F`}{{ce}n{}{}}00{{{Ff{ce}}}e{FbF`}{}}{{}{{Fh{ce}}}{FbF`Fd}{}}`{{{En{ce}}{En{ce}}}Dl{FjFbF`Fd}Fj}{{{Ff{ce}}{Ff{ce}}}Dl{FjFbF`}Fj}{{{Fh{ce}}{Fh{ce}}}Dl{FjFbF`Fd}Fj}{{{Fh{ce}}g}{{Cl{{Ff{ce}}}}}{FbF`Fd}F`{{Fl{{Cj{c}}}}}}{{{Fh{ce}}g{Cl{{Ff{ce}}}}}n{FbF`Fd}F`{{Fl{{Cj{c}}}}}}{{{En{ce}}An}Bd{FnFbF`Fd}Fn}{{{Ff{ce}}An}Bd{FnFbF`}Fn}{{{Fh{ce}}An}Bd{FnFbF`Fd}Fn}{cc{}}00{i{{Fh{cg}}}{FbF`Fd}{{Fl{{Cj{c}}}}}F`{{Gd{}{{G`{{Gb{eg}}}}}}}}{{{En{ce}}g}n{GfFbF`Fd}GfGh}{{{Ff{ce}}g}n{GfFbF`}GfGh}{{{Fh{ce}}g}n{GfFbF`Fd}GfGh}{{{Fh{ce}}}n{FbF`Fd}F`}{{{Fh{ce}}ge}n{FbF`Fd}F`{{Fl{{Cj{c}}}}}}{{{Ff{ce}}}{{Cj{c}}}{FbF`}{}}{ce{}{}}00{{}{{Fh{ce}}}{FbF`Fd}F`}`111{c{{Bb{e}}}{}{}}00000{cCb{}}00``````{{jGj}n}44444444{Gl{{Bb{GjGn}}}}{{}Gl}{GjGj}{{ce}n{}{}}2{{GnAn}Bd}0{{GjAn}Bd}{{jAn}Bd}{cc{}}{H`Gn}{C`Gn}222{hj}????{{Gjc}BbHb}{{jc}BbHb}{{Gl{Cl{Bh}}}Gl}`{ce{}{}}{cC`{}}2`{c{{Bb{e}}}{}{}}0000000{cCb{}}000`33:{{{Ch{{Cf{Cd}}}}}{{A`{d}}}}{{d{Bj{Bh}}{Cj{Bl}}}{{Dh{{Bj{Bh}}}}}}{{d{Bj{Bh}}{Bj{{Gb{{Cj{Bl}}Af}}}}}{{Cl{Bh}}}}6{{{Bj{Bh}}}n}554`77>{{{Ch{{Cf{Cd}}}}}{{A`{f}}}}8{f{{Hf{{Hd{Bh}}Bh}}}}{{f{Bj{Bh}}}{{Cl{Bh}}}}887```::::{hh}{{ce}n{}{}}{{hAn}{{Bb{nB`}}}}{cc{}}0{Bf{{A`{h}}}}{c{{l{c}}}Ab}{h{{Gb{{Bj{Bh}}{Bn{Bl}}}}}}{ce{}{}}00{{{l{c}}}{{Dh{e}}}Ab{}}```{{hc}BbHb}2{c{{Bb{e}}}{}{}}000{cCb{}}0","D":"AAb","p":[[5,"AnnotationsDataBase",85],[5,"SequencesDataBase",256],[5,"Translate",268],[5,"Variant",279],[5,"Myth",201],[5,"VcfReader",279],[1,"unit"],[8,"Result",121],[10,"BufRead",309],[10,"Write",309],[6,"Strand",11],[6,"Frame",11],[5,"Attribute",11],[5,"Annotation",11],[5,"Formatter",310],[5,"Error",310],[6,"Result",311],[8,"Result",310],[5,"ByteRecord",312],[1,"u8"],[1,"slice"],[1,"u64"],[5,"Range",313],[5,"String",314],[5,"TypeId",315],[10,"Read",309],[5,"Box",316],[5,"BufReader",317],[8,"Interval",147],[5,"Vec",318],[5,"Command",95],[5,"Command",319],[5,"ArgMatches",320],[8,"Error",321],[5,"Id",322],[6,"Option",323],[5,"BufWriter",324],[1,"bool"],[6,"Timestamp",325],[1,"usize"],[6,"Error",121],[5,"ParseIntError",326],[5,"ParseFloatError",327],[5,"Error",328],[5,"SetLoggerError",329],[10,"Error",330],[5,"InternalEntry",147],[10,"Clone",331],[10,"Ord",332],[10,"Copy",333],[5,"Entry",147],[5,"IntervalTree",147],[10,"PartialEq",332],[10,"Into",334],[10,"Debug",310],[17,"Item"],[1,"tuple"],[10,"IntoIterator",335],[10,"Hash",336],[10,"Hasher",336],[5,"AnnotationMyth",201],[5,"AnnotationMythBuilder",201],[6,"AnnotationMythBuilderError",201],[5,"UninitializedFieldError",337],[10,"Serializer",338],[1,"array"],[5,"AHashMap",339]],"r":[],"b":[[38,"impl-Display-for-Strand"],[39,"impl-Debug-for-Strand"],[40,"impl-Display-for-Frame"],[41,"impl-Debug-for-Frame"],[42,"impl-Debug-for-Attribute"],[43,"impl-Display-for-Attribute"],[44,"impl-Display-for-Annotation"],[45,"impl-Debug-for-Annotation"],[134,"impl-Debug-for-Error"],[135,"impl-Display-for-Error"],[137,"impl-From%3CParseIntError%3E-for-Error"],[138,"impl-From%3CParseFloatError%3E-for-Error"],[139,"impl-From%3CError%3E-for-Error"],[140,"impl-From%3CSetLoggerError%3E-for-Error"],[221,"impl-Debug-for-AnnotationMythBuilderError"],[222,"impl-Display-for-AnnotationMythBuilderError"],[226,"impl-From%3CUninitializedFieldError%3E-for-AnnotationMythBuilderError"],[227,"impl-From%3CString%3E-for-AnnotationMythBuilderError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKwAHQAWABgAQgATAFcAAQBdAAIAYgAGAGoAAgBzAAQAhQADAIoAAwCPAAQAmAALAKUAAACnAAIArAACALIAAwC+AAsA0QAHANsABgDjAAEA7QABAPEAAQD1AAsAAgEBAAoBAgAOAQEAFQECABsBBgApAQEALgEHAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
