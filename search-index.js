var searchIndex = new Map(JSON.parse('[\
["variant_myth",{"t":"CCCCCCCCCHHFFPGPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPPPPPPIPPNNNNNNNNNNNNNNNFFIFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNFFGPPPPPPPGPPPPPPPPFPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNONNNNNNNNNNNNNNNFNNNNNNNHNNNFNNNNNNNNHHNNNNFFONNNNNNNNNNNNNNNNNOOONNNNNNNN","n":["annotation","annotations_db","cli","error","interval_tree","myth","sequences_db","translate","variant","variants2myth","vcf2json","Annotation","Attribute","Forward","Frame","One","Reverse","Strand","Two","Unknow","Zero","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_annotation","from_byte_record","from_u8_slice","get_attribute","get_exon_number","get_feature","get_frame","get_gene_name","get_interval","get_seqname","get_source","get_strand","get_transcript_id","get_transcript_id","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AnnotationsDataBase","borrow","borrow_mut","from","from_reader","get_annotation","into","try_from","try_into","type_id","Command","annotations","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","output","quiet","reference","timestamp","translate","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","updown_distance","variant","verbosity","AttributeNameNotSupport","Err","Error","FloatParsing","GffBadFrame","GffBadStrand","IntParsing","Log","Ok","Result","StdIO","VcfBadRecord","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id","Entry","InternalEntry","Interval","IntervalTree","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","default","end","eq","eq","eq","find","find_into","fmt","fmt","fmt","from","from","from","from_iter","hash","hash","hash","index","insert","interval","into","into","into","new","start","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AnnotationMyth","AnnotationMythBuilder","AnnotationMythBuilderError","Cds","CodonChange","CodonChangePlusCodonDeletion","CodonChangePlusCodonInsertion","CodonDeletion","CodonInsertion","Downstream","Effect","Exon","ExonDeleted","FrameShift","Gene","Intergenic","IntergenicConserved","Intron","IntronConserved","Myth","NonSynonymousCoding","SpliceSiteAcceptor","SpliceSiteDonor","StartGained","StartLost","StopGained","StopLost","SynonymousCoding","SynonymousStart","SynonymousStop","Transcript","UninitializedField","Upstream","Utr3Deleted","Utr3Prime","Utr5Deleted","Utr5Prime","ValidationError","add_annotation","add_effect","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","default","effects","effects","eq","eq","eq","extend_effect","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_variant","gene_name","gene_name","into","into","into","into","into","serialize","serialize","serialize","source","source","to_owned","to_owned","to_string","transcript_id","transcript_id","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","SequencesDataBase","borrow","borrow_mut","from","from_reader","get_interval","get_transcript","into","rev_comp","try_from","try_into","type_id","Translate","borrow","borrow_mut","from","from_reader","get_aa","into","is_start","is_stop","nuc2bit","seq2bit","translate","try_from","try_into","type_id","Variant","VcfReader","alt_seq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","from_byte_record","from_reader","get_interval","into","into","into_iter","next","position","ref_seq","seqname","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"variant_myth"],[11,"variant_myth::annotation"],[92,"variant_myth::annotations_db"],[102,"variant_myth::cli"],[129,"variant_myth::error"],[156,"variant_myth::interval_tree"],[210,"variant_myth::myth"],[318,"variant_myth::sequences_db"],[330,"variant_myth::translate"],[345,"variant_myth::variant"],[376,"std::io"],[377,"core::fmt"],[378,"core::result"],[379,"csv::byte_record"],[380,"core::ops::range"],[381,"alloc::string"],[382,"core::any"],[383,"alloc::boxed"],[384,"std::io::buffered::bufreader"],[385,"alloc::vec"],[386,"clap_builder::builder::command"],[387,"clap_builder::parser::matches::arg_matches"],[388,"clap_builder"],[389,"clap_builder::util::id"],[390,"core::option"],[391,"std::io::buffered::bufwriter"],[392,"stderrlog"],[393,"log"],[394,"core::num::dec2flt"],[395,"core::num::error"],[396,"std::io::error"],[397,"core::error"],[398,"core::clone"],[399,"core::cmp"],[400,"core::marker"],[401,"core::convert"],[402,"core::iter::traits::collect"],[403,"core::hash"],[404,"derive_builder::error"],[405,"serde::ser"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,12,11,0,12,12,12,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,13,11,12,13,14,11,11,12,12,13,13,14,14,11,12,13,14,14,14,13,14,13,14,14,13,14,14,14,14,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,0,1,1,1,1,1,1,1,1,1,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,8,0,41,41,41,41,41,8,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,47,51,52,47,51,52,47,51,52,47,51,52,51,52,30,47,51,52,52,52,47,51,52,47,51,52,52,47,51,52,52,52,51,47,51,52,52,30,47,51,52,47,51,52,47,51,52,47,51,52,0,0,0,63,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,63,63,63,64,63,63,63,63,63,64,5,62,63,62,64,61,5,63,62,64,61,5,62,61,63,61,63,61,62,62,61,63,61,5,62,63,64,64,61,5,63,62,64,64,64,61,5,5,62,61,63,62,64,61,5,63,61,5,62,61,63,61,64,62,61,63,62,64,61,5,63,62,64,61,5,63,62,64,61,5,0,2,2,2,2,2,2,2,0,2,2,2,0,3,3,3,3,3,3,3,3,0,0,3,3,3,3,0,0,4,6,4,6,4,4,4,4,4,6,4,4,6,4,6,4,6,6,4,4,4,4,4,6,4,6,4,6,4],"f":"`````````{{bdfh}j}{{bdf{l{c}}e}{{A`{n}}}AbAd}``````````{ce{}{}}0000000{AfAf}{AhAh}{AjAj}{AlAl}{{ce}n{}{}}000{{}Aj}{{AfAf}An}{{AhAh}An}{{AjAj}An}{{AlAl}An}{{AfB`}{{Bd{nBb}}}}{{AfB`}Bf}{{AhB`}{{Bd{nBb}}}}{{AhB`}Bf}{{AjB`}{{Bd{nBb}}}}{{AjB`}Bf}{{AlB`}Bf}{{AlB`}{{Bd{nBb}}}}{cc{}}000{{Al{Bj{Bh}}}Al}{Bl{{A`{Al}}}}{{{Bj{Bh}}}{{A`{Aj}}}}{AlAj}{AjBn}{Al{{Bj{Bh}}}}{AlAh}{Aj{{Bj{Bh}}}}{Al{{C`{Bn}}}}33{AlAf}24{ce{}{}}0000000{cCb{}}000{c{{Bd{e}}}{}{}}0000000{cCd{}}000`33>{{{Cj{{Ch{Cf}}}}Bn}{{A`{b}}}}{{b{Bj{Bh}}{Cl{Bn}}}{{Cn{Al}}}}5332`{D`{{A`{{Cj{{Ch{Cf}}}}}}}}{DbDb}077{{}Db}0{{D`B`}Bf}{cc{}}{Dd{{Bd{D`Df}}}}0{{}{{Dj{Dh}}}}<{D`{{A`{{Dl{{Ch{Ad}}}}}}}}{D`An}8{D`Dn}9==<{{D`Dd}{{Bd{nDf}}}}0{D`Bn};{D`E`}````````````{ce{}{}}0{{EbB`}Bf}0:{EdEb}{EfEb}{EhEb}{EjEb}5{Eb{{Dj{El}}}}{cCb{}}{c{{Bd{e}}}{}{}}0{cCd{}}````999999{{{En{ce}}}{{En{ce}}}{F`FbF`Fd}F`}{{{Ff{ce}}}{{Ff{ce}}}{F`FbF`}F`}{{{Fh{ce}}}{{Fh{ce}}}{F`FbF`Fd}F`}{{ce}n{}{}}00{{{Ff{ce}}}e{FbF`}{}}{{}{{Fh{ce}}}{FbF`Fd}{}}`{{{En{ce}}{En{ce}}}An{FjFbF`Fd}Fj}{{{Ff{ce}}{Ff{ce}}}An{FjFbF`}Fj}{{{Fh{ce}}{Fh{ce}}}An{FjFbF`Fd}Fj}{{{Fh{ce}}g}{{Cn{{Ff{ce}}}}}{FbF`Fd}F`{{Fl{{Cl{c}}}}}}{{{Fh{ce}}g{Cn{{Ff{ce}}}}}n{FbF`Fd}F`{{Fl{{Cl{c}}}}}}{{{En{ce}}B`}Bf{FnFbF`Fd}Fn}{{{Ff{ce}}B`}Bf{FnFbF`}Fn}{{{Fh{ce}}B`}Bf{FnFbF`Fd}Fn}{cc{}}00{i{{Fh{cg}}}{FbF`Fd}{{Fl{{Cl{c}}}}}F`{{Gd{}{{G`{{Gb{eg}}}}}}}}{{{En{ce}}g}n{GfFbF`Fd}GfGh}{{{Ff{ce}}g}n{GfFbF`}GfGh}{{{Fh{ce}}g}n{GfFbF`Fd}GfGh}{{{Fh{ce}}}n{FbF`Fd}F`}{{{Fh{ce}}ge}n{FbF`Fd}F`{{Fl{{Cl{c}}}}}}{{{Ff{ce}}}{{Cl{c}}}{FbF`}{}}{ce{}{}}00{{}{{Fh{ce}}}{FbF`Fd}F`}`111{c{{Bd{e}}}{}{}}00000{cCd{}}00``````````````````````````````````````{{jGj}n}{{GlGn}n}5555555555{Gl{{Bd{GjH`}}}}{{}Gl}{GnGn}{GjGj}{{ce}n{}{}}03{{Gl{Cn{Gn}}}Gl}`{{GnGn}An}{{GjGj}An}{{jj}An}{{Gl{Bj{Gn}}}n}{{GnB`}Bf}{{H`B`}Bf}0{{GjB`}Bf}{{jB`}Bf}{cc{}}00{HbH`}{CbH`}22{hj}{{Gl{Cn{Bh}}}Gl}`{ce{}{}}0000{{Gnc}BdHd}{{Gjc}BdHd}{{jc}BdHd}4`33{cCb{}}5`{c{{Bd{e}}}{}{}}000000000{cCd{}}0000`66;{{{Cj{{Ch{Cf}}}}}{{A`{d}}}}{{d{Bj{Bh}}{Cl{Bn}}}{{Dj{{Bj{Bh}}}}}}{{d{Bj{Bh}}{Bj{{Gb{{Cl{Bn}}Af}}}}}{{Cn{Bh}}}}9{{{Bj{Bh}}}n}554`::?{{{Cj{{Ch{Cf}}}}}{{A`{f}}}}{{f{Bj{Bh}}}Bh}<{{f{Bj{Bh}}}An}0{BhBh}{{{Bj{Bh}}}Bh}{{f{Bj{Bh}}}{{Cn{Bh}}}};;:```{ce{}{}}000{hh}{{ce}n{}{}}{{hh}An}{{hB`}{{Bd{nBb}}}}{cc{}}0{Bl{{A`{h}}}}{c{{l{c}}}Ab}{h{{C`{Bn}}}}888{{{l{c}}}{{Dj{e}}}Ab{}}```{{hc}BdHd}:{c{{Bd{e}}}{}{}}000{cCd{}}0","D":"AGd","p":[[5,"AnnotationsDataBase",92],[5,"SequencesDataBase",318],[5,"Translate",330],[5,"Variant",345],[5,"Myth",210],[5,"VcfReader",345],[1,"unit"],[8,"Result",129],[10,"BufRead",376],[10,"Write",376],[6,"Strand",11],[6,"Frame",11],[5,"Attribute",11],[5,"Annotation",11],[1,"bool"],[5,"Formatter",377],[5,"Error",377],[6,"Result",378],[8,"Result",377],[1,"u8"],[1,"slice"],[5,"ByteRecord",379],[1,"u64"],[5,"Range",380],[5,"String",381],[5,"TypeId",382],[10,"Read",376],[5,"Box",383],[5,"BufReader",384],[8,"Interval",156],[5,"Vec",385],[5,"Command",102],[5,"Command",386],[5,"ArgMatches",387],[8,"Error",388],[5,"Id",389],[6,"Option",390],[5,"BufWriter",391],[6,"Timestamp",392],[1,"usize"],[6,"Error",129],[5,"SetLoggerError",393],[5,"ParseFloatError",394],[5,"ParseIntError",395],[5,"Error",396],[10,"Error",397],[5,"InternalEntry",156],[10,"Clone",398],[10,"Ord",399],[10,"Copy",400],[5,"Entry",156],[5,"IntervalTree",156],[10,"PartialEq",399],[10,"Into",401],[10,"Debug",377],[17,"Item"],[1,"tuple"],[10,"IntoIterator",402],[10,"Hash",403],[10,"Hasher",403],[5,"AnnotationMyth",210],[5,"AnnotationMythBuilder",210],[6,"Effect",210],[6,"AnnotationMythBuilderError",210],[5,"UninitializedFieldError",404],[10,"Serializer",405]],"r":[],"b":[[42,"impl-Display-for-Strand"],[43,"impl-Debug-for-Strand"],[44,"impl-Display-for-Frame"],[45,"impl-Debug-for-Frame"],[46,"impl-Display-for-Attribute"],[47,"impl-Debug-for-Attribute"],[48,"impl-Debug-for-Annotation"],[49,"impl-Display-for-Annotation"],[143,"impl-Debug-for-Error"],[144,"impl-Display-for-Error"],[146,"impl-From%3CSetLoggerError%3E-for-Error"],[147,"impl-From%3CParseFloatError%3E-for-Error"],[148,"impl-From%3CParseIntError%3E-for-Error"],[149,"impl-From%3CError%3E-for-Error"],[274,"impl-Display-for-AnnotationMythBuilderError"],[275,"impl-Debug-for-AnnotationMythBuilderError"],[281,"impl-From%3CUninitializedFieldError%3E-for-AnnotationMythBuilderError"],[282,"impl-From%3CString%3E-for-AnnotationMythBuilderError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL4AHwAWABwASQATAF4AAQBkAAIAaQAGAHEAAgB6AAQAjgADAJMAAwCYAAQAoQALAK4AAACwAAIAtQACALsAAwDHAAsA+wAJAAcBBAAOAQIAEgEEABoBAQAmAQIAKwECADABDgBAAQEASAECAEwBAQBXAQIAXQEHAGwBAQBxAQcA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
